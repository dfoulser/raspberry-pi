2019-09-26

3V3 = 3.3 volts
5V = 5.0 volts

Why the 3V3 formatting?  Sounds like years ago it was common for the printing
of a "." character to get lost, so 3.3V might become "3 3V" and be hard to 
read.  

My device is a Raspberry Pi 3 model B.

GPIO pins have a max current to avoid damage to internal circuits.
Max is about 16mA per GPIO pin, with aggregate max over 26 GPIO pins of 100mA.

Updating all system software - I run into the bug that Canakit SD cards are
not able to format and update some size, net effect is that I lose USB access
(e.g., mouse & keyboard) on rebooting.
Download balenaEtcher and Raspbian-buster image, install that way on a new SD
card.  What I find is that the default Windows formatting request zaps the
card part way through install.  So install twice, formatting the first time and
just installing the second. Then it works.

2019-09-26

3V3 = 3.3 volts
5V = 5.0 volts

Why the 3V3 formatting?  Sounds like years ago it was common for the printing
of a "." character to get lost, so 3.3V might become "3 3V" and be hard to 
read.  

My device is a Raspberry Pi 3 model B.

GPIO pins have a max current to avoid damage to internal circuits.
Max is about 16mA per GPIO pin, with aggregate max over 26 GPIO pins of 100mA.

Updating all system software - I run into the bug that Canakit SD cards are
not able to format and update some size, net effect is that I lose USB access
(e.g., mouse & keyboard) on rebooting.
Download balenaEtcher and Raspbian-buster image, install that way on a new SD
card.  What I find is that the default Windows formatting request zaps the
card part way through install.  So install twice, formatting the first time and
just installing the second. Then it works.

2019-09-26

3V3 = 3.3 volts
5V = 5.0 volts

Why the 3V3 formatting?  Sounds like years ago it was common for the printing
of a "." character to get lost, so 3.3V might become "3 3V" and be hard to 
read.  

My device is a Raspberry Pi 3 model B.

GPIO pins have a max current to avoid damage to internal circuits.
Max is about 16mA per GPIO pin, with aggregate max over 26 GPIO pins of 100mA.

Updating all system software - I run into the bug that Canakit SD cards are
not able to format and update some size, net effect is that I lose USB access
(e.g., mouse & keyboard) on rebooting.
Download balenaEtcher and Raspbian-buster image, install that way on a new SD
card.  What I find is that the default Windows formatting request zaps the
card part way through install.  So install twice, formatting the first time and
just installing the second. Then it works.

2019-09-26

3V3 = 3.3 volts
5V = 5.0 volts

Why the 3V3 formatting?  Sounds like years ago it was common for the printing
of a "." character to get lost, so 3.3V might become "3 3V" and be hard to 
read.  

My device is a Raspberry Pi 3 model B.

GPIO pins have a max current to avoid damage to internal circuits.
Max is about 16mA per GPIO pin, with aggregate max over 26 GPIO pins of 100mA.

Updating all system software - I run into the bug that Canakit SD cards are
not able to format and update some size, net effect is that I lose USB access
(e.g., mouse & keyboard) on rebooting.
Download balenaEtcher and Raspbian-buster image, install that way on a new SD
card.  What I find is that the default Windows formatting request zaps the
card part way through install.  So install twice, formatting the first time and
just installing the second. Then it works.

2019-09-26

3V3 = 3.3 volts
5V = 5.0 volts

Why the 3V3 formatting?  Sounds like years ago it was common for the printing
of a "." character to get lost, so 3.3V might become "3 3V" and be hard to 
read.  

My device is a Raspberry Pi 3 model B.

GPIO pins have a max current to avoid damage to internal circuits.
Max is about 16mA per GPIO pin, with aggregate max over 26 GPIO pins of 100mA.

Updating all system software - I run into the bug that Canakit SD cards are
not able to format and update some size, net effect is that I lose USB access
(e.g., mouse & keyboard) on rebooting.
Download balenaEtcher and Raspbian-buster image, install that way on a new SD
card.  What I find is that the default Windows formatting request zaps the
card part way through install.  So install twice, formatting the first time and
just installing the second. Then it works.

2019-09-26

3V3 = 3.3 volts
5V = 5.0 volts

Why the 3V3 formatting?  Sounds like years ago it was common for the printing
of a "." character to get lost, so 3.3V might become "3 3V" and be hard to 
read.  

My device is a Raspberry Pi 3 model B.

GPIO pins have a max current to avoid damage to internal circuits.
Max is about 16mA per GPIO pin, with aggregate max over 26 GPIO pins of 100mA.

Updating all system software - I run into the bug that Canakit SD cards are
not able to format and update some size, net effect is that I lose USB access
(e.g., mouse & keyboard) on rebooting.
Download balenaEtcher and Raspbian-buster image, install that way on a new SD
card.  What I find is that the default Windows formatting request zaps the
card part way through install.  So install twice, formatting the first time and
just installing the second. Then it works.

2019-09-26

3V3 = 3.3 volts
5V = 5.0 volts

Why the 3V3 formatting?  Sounds like years ago it was common for the printing
of a "." character to get lost, so 3.3V might become "3 3V" and be hard to 
read.  

My device is a Raspberry Pi 3 model B.

GPIO pins have a max current to avoid damage to internal circuits.
Max is about 16mA per GPIO pin, with aggregate max over 26 GPIO pins of 100mA.

Updating all system software - I run into the bug that Canakit SD cards are
not able to format and update some size, net effect is that I lose USB access
(e.g., mouse & keyboard) on rebooting.
Download balenaEtcher and Raspbian-buster image, install that way on a new SD
card.  What I find is that the default Windows formatting request zaps the
card part way through install.  So install twice, formatting the first time and
just installing the second. Then it works.

2019-09-26

3V3 = 3.3 volts
5V = 5.0 volts

Why the 3V3 formatting?  Sounds like years ago it was common for the printing
of a "." character to get lost, so 3.3V might become "3 3V" and be hard to 
read.  

My device is a Raspberry Pi 3 model B.

GPIO pins have a max current to avoid damage to internal circuits.
Max is about 16mA per GPIO pin, with aggregate max over 26 GPIO pins of 100mA.

Updating all system software - I run into the bug that Canakit SD cards are
not able to format and update some size, net effect is that I lose USB access
(e.g., mouse & keyboard) on rebooting.
Download balenaEtcher and Raspbian-buster image, install that way on a new SD
card.  What I find is that the default Windows formatting request zaps the
card part way through install.  So install twice, formatting the first time and
just installing the second. Then it works.

2019-09-26

3V3 = 3.3 volts
5V = 5.0 volts

Why the 3V3 formatting?  Sounds like years ago it was common for the printing
of a "." character to get lost, so 3.3V might become "3 3V" and be hard to 
read.  

My device is a Raspberry Pi 3 model B.

GPIO pins have a max current to avoid damage to internal circuits.
Max is about 16mA per GPIO pin, with aggregate max over 26 GPIO pins of 100mA.

Updating all system software - I run into the bug that Canakit SD cards are
not able to format and update some size, net effect is that I lose USB access
(e.g., mouse & keyboard) on rebooting.
Download balenaEtcher and Raspbian-buster image, install that way on a new SD
card.  What I find is that the default Windows formatting request zaps the
card part way through install.  So install twice, formatting the first time and
just installing the second. Then it works.

First circuit wires an LED from 5V + to GND rails of the breakout board.
I see I'm using a resistor to avoid large current flow.  What are the rules?

Actually, look at the rules for pull-up transistor on a logic gate's input
that we want to be high (a "1") when circuit is open, and when closed is
wired to GND (for a "0").  Putting resistor between 5V source and the logic
gate will reduce current flow.  At the right resistance the amperage will be
below the GPIO limit and the 5V power will push the gate to at least more 
than the lower limit at which "1" is read.

Say the circuit reads "1" between V_i_high(min)...5V, and reads "0" between 
0V...V_i_low(max), and is indeterminate between V_i_low(max)...V_i_high(min).

Single gate pull-up resistor equaation:

R_max = [ V_cc - V_i_high(max) ] / I_i_high.

If the input flow were 20uA, and we wanted 4V5 with V_i_high(max) at 2V0, then
(4.5 - 2.0) V / 20uA = 10^6 * 1/8 Ohm = 125K Ohm.  And you use something between
that and ~1/3 of that.

Let's find out what are the numbers for our GPIO pin, our microphone,
our 4 channel ADC, etc and draw a circuit.


